<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<entry key="selectTutorInfo">
	
	   SELECT 
		   	MEM_NO
	        , TT_NAME
	        , TT_PHONE
	        , TT_EMAIL
	        , INTRODUCE
	        , PUB_PHONE
	        , TT_PROFILE
	    FROM TUTOR
	    WHERE MEM_NO = ?

	</entry>
	
	<!-- 로그인한 튜터 클래스 개수  -->
	<entry key="selectClassCount">
		
		SELECT COUNT(*) "count"
		FROM CLASS
		WHERE MEM_NO =?
	</entry>
	
	<!-- 클래스 리스트 조회 -->
	<entry key="selectClassList">
	
	 SELECT *
	 FROM
	  (	
		SELECT ROWNUM RNUM, A.*
		FROM	
			(
			 SELECT 
					 C.CL_NO
					,G.CT_NAME
					,D.CT_DNAME
					,T.TT_NAME
					,CL_NAME
					,C.ENROLL_DATE
					,C.CL_STATUS
					,CL_REFUSE
					
				FROM CLASS C
				JOIN CATEGORY G USING (CT_NO)
				JOIN DCATEGORY D USING (CT_DNO)
				JOIN TUTOR T USING (MEM_NO)
				WHERE MEM_NO= ?
				AND C.CL_STATUS IN (0,1,2,3)
			    ORDER BY CL_NO DESC
			)A
	  )	
	WHERE RNUM BETWEEN ?   AND ?
	</entry>
	

	
	<!-- 카테고리 대분류 조회 -->	
	<entry key="selectCategoryList">
		SELECT CT_NO
			  ,CT_NAME
		FROM  CATEGORY

	</entry>
	<!-- 세부카테고리 조회 -->
	<entry key="selectDcategoryList">
		SELECT CT_DNO
		      ,CT_NO
		      ,CT_DNAME
		 FROM DCATEGORY     

	</entry>		

	<!-- 튜터 프로필 수정 -->
	<entry key="updateTutorProfile">
	 	UPDATE TUTOR
	 	  SET  TT_NAME =?
	 	  	  , TT_PHONE =?
	 	  	  , TT_EMAIL =?
	 	  	  , INTRODUCE= ?
	 	  	  , PUB_PHONE= ?
	 	  	  , TT_PROFILE =?
	 	  	  , MODIFY_DATE = SYSDATE
	 	WHERE MEM_NO = ?

	</entry>
	
	<!-- 튜터 닉네임 중복체크 -->
	<entry key="nickCheck">
		SELECT
			   COUNT(*) "COUNT"
		  FROM TUTOR
		WHERE TT_NAME = ? 
		 
	</entry>

	
	
	<entry key="insertTutor">
		INSERT
		  INTO TUTOR
		  (
			    MEM_NO
			  , TT_NAME
			  , TT_PHONE
			  , TT_EMAIL
			  , INTRODUCE
			  , PUB_PHONE
			  , TT_PROFILE
		  )
		  VALUES
		  (
			    ?
			  , ?
			  , ?
			  , ?
			  , ?
			  , ?
			  , ?
		  )
	</entry>
	
	<!-- 튜터 등급 변경 -->
	<entry key="updateGrade">
		UPDATE MEMBER
    	   SET GRADE='2'
         WHERE MEM_NO = ? 
	</entry>
	
	<!-- 클래스 상세조회 -->
	<entry key="selectClass">
		SELECT 
	        CL_NO,
	        CT_NAME,
	        CT_DNAME,
	        TT_NAME,
	        LOCAL_NAME,
	        DISTR_NAME,
	        CL_NAME,
	        CL_ADDRESS,
	        CL_MAX,
	        CL_LEVEL,
	        START_DATE,
	        END_DATE,
	        CL_TIMES,
	        CL_SCHEDULE,
	        CL_DAY,
	        TO_CHAR(CL_PRICE, '999,999,999')"CL_PRICE",
	        CL_DETAIL,
	        CURRICULUM,
	        REFUNDPOLICY,
	        CL_SUPPLIES,
	        KEYWORD,
	        C.ENROLL_DATE,
	        CL_STATUS,
	        CL_THUMB,
	        INTRODUCE
	   FROM CLASS C
	   JOIN CATEGORY G USING (CT_NO)
	   JOIN DCATEGORY D USING (CT_DNO)
	   JOIN TUTOR T USING (MEM_NO)
	   JOIN LOCATION USING (LOCAL_CODE)
	   JOIN DISTRICT USING (DISTR_CODE)
	  WHERE CL_NO =?
   
		
	
	</entry>
	
	<!-- 스케줄조회 -->
	<entry key="selectSchedule">
	SELECT SCH_NO
		  ,CL_NO
		  ,SESSION_NO
		  ,START_TIME
		  ,END_TIME
	FROM SCHEDULE	
	WHERE CL_NO = ?  
	</entry>
	
	<!-- 클래스 판매중단처리 -->
	<entry key="stopClassUpdate">
	 UPDATE CLASS
	    SET END_DATE = TO_CHAR(SYSDATE,'YYYY/MM/DD')
	    	,UPDATE_DATE = SYSDATE
	    	,CL_STATUS = 3
	
	  WHERE CL_NO =?
	

	</entry>
	
	<!-- 클래스등록 -->
	<entry key="insertClass">
	INSERT 
			 INTO CLASS
			    (
			     CL_NO
			    , CT_NO 
			    , CT_DNO
			    , MEM_NO
			    , LOCAL_CODE 
			    , DISTR_CODE
			    , CL_NAME 
			    , CL_ADDRESS
			    , CL_MAX 
			    , CL_LEVEL
			    , END_DATE 
			    , CL_TIMES 
			    , CL_SCHEDULE
			    , CL_DAY 
			    , CL_PRICE 
			    , CL_DETAIL 
			    , CURRICULUM
			    , REFUNDPOLICY 
			    , CL_SUPPLIES
			    , KEYWORD
			    , ENROLL_DATE 
			    , UPDATE_DATE
			    , CL_STATUS  
			    , CL_THUMB 
			    )
			VALUES
			 (
			  SEQ_CLNO.NEXTVAL,
			  ?,
			  (SELECT CT_DNO
			  FROM DCATEGORY
			  WHERE CT_DNAME = ?),  
			  ?,
			  (SELECT LOCAL_CODE
			  FROM LOCATION
			  WHERE LOCAL_NAME = ?),
			  (SELECT DISTR_CODE
			  FROM DISTRICT
			  WHERE DISTR_NAME = ?),
			  ?,
			  ?,
			  ?,
			  ?,
			  ?,
			  ?,
			  ?,
			  ?,
			  ?,
			  ?,
			  ?,
			  ?,
			  ?,
			  ?,
			  SYSDATE,
			  SYSDATE,
			  0,
			  ?
			  
			)

	</entry>
	
	<!-- 클래스 첨부파일등록 -->
	<entry key="insertClassAttachment">
	
	  INSERT 
	     INTO ATTACHMENT
	     (
			FILE_NO
		  ,	ORIGIN_NAME
		  , CHANGE_NAME
		  , FILE_PATH
		  , UPLOAD_DATE
		  , REF_TYPE
		  , REF_NO
	     
	     )
	     VALUES
	     (
	      SEQ_ATNO.NEXTVAL
	      ,?
	      ,?
	      ,?
	      ,SYSDATE
	      ,?
	      ,SEQ_CLNO.CURRVAL

	     )
	     
	
	
	</entry>
	
	<!-- 클래스 첨부파일 조회 -->
	<entry key="selectAttachment">
		SELECT 
				FILE_NO
			   ,ORIGIN_NAME
			   ,CHANGE_NAME
			   ,FILE_PATH
			   ,REF_NO
	    FROM ATTACHMENT
	    WHERE REF_NO = ?
	       

	</entry>
	
	<!-- 클래스 등록시 스케줄 등록 -->
	<entry key="insertSchedule">
	
	INSERT 
		INTO SCHEDULE
		         (SCH_NO
		        , CL_NO
		        , SESSION_NO
		        , START_TIME
		        , END_TIME
		       	, CLS_HOUR
		        )
		VALUES 
		        ( 
		          SEQ_SCHNO.NEXTVAL
		          ,	SEQ_CLNO.CURRVAL
		          , ?
		          , ?
		          , ?
		          ,(SELECT ROUND((TO_DATE(?, 'HH24:MI') - TO_DATE(?, 'HH24:MI')) * 24, 2)
           			 FROM dual)
  
		        
		            )
  
	</entry>
	
	<!-- 클래스 수정  -->
	<entry key="updateClass">
		   UPDATE CLASS
       		  SET
            	 CT_NO = ?
			    , CT_DNO = (SELECT CT_DNO
                            FROM DCATEGORY
                            WHERE CT_DNAME = ?)
			    , LOCAL_CODE =  (SELECT LOCAL_CODE
                                  FROM LOCATION
                                  WHERE LOCAL_NAME = ?)
			    , DISTR_CODE = (SELECT DISTR_CODE
                                FROM DISTRICT
                                  WHERE DISTR_NAME = ?)
			    , CL_NAME  = ?
			    , CL_ADDRESS = ?
			    , CL_MAX = ?
			    , CL_LEVEL = ?
			    , END_DATE = ?
			    , CL_TIMES = ?
			    , CL_SCHEDULE = ?
			    , CL_DAY = ?
			    , CL_PRICE = ?
			    , CL_DETAIL = ?
			    , CURRICULUM = ?
			    , REFUNDPOLICY = ?
			    , CL_SUPPLIES = ?
			    , KEYWORD = ?
			    , UPDATE_DATE = SYSDATE
			    , CL_STATUS = 0
			    , CL_THUMB = ?
	  WHERE  CL_NO = ?		    
		
	
	
	
	</entry>
	<!-- 클래스 수정시 첨부파일 수정 -->
	<entry key="updateAttachment">
	
	  	UPDATE ATTACHMENT
	  	SET ORIGIN_NAME = ?
	  	   ,CHANGE_NAME = ?
	  	   ,FILE_PATH =?
		   ,UPLOAD_DATE = SYSDATE
		WHERE FILE_NO =?	
	
	</entry>
	<!-- 클래스 수정시 첨부파일 인서트  -->
	<entry key="insertNewAttachment">
	    INSERT 
	     INTO ATTACHMENT
	     (
			FILE_NO
		  ,	ORIGIN_NAME
		  , CHANGE_NAME
		  , FILE_PATH
		  , UPLOAD_DATE
		  , REF_TYPE
		  , REF_NO
	     
	     )
	     VALUES
	     (
	      SEQ_ATNO.NEXTVAL
	      ,?
	      ,?
	      ,?
	      ,SYSDATE
	      ,?
	      ,?

	     )
	     
	</entry>
	<!-- 클래스 수정시 스케줄 삭제 -->
	<entry key="deleteSchedule">
	   	DELETE
	   	FROM SCHEDULE
	    WHERE CL_NO =?

	</entry>
	<!-- 클래스 수정시 스케줄 등록 -->
	<entry key="insertNewSchedule">
		INSERT 
		INTO SCHEDULE
		         (SCH_NO
		        , CL_NO
		        , SESSION_NO
		        , START_TIME
		        , END_TIME
		       	, CLS_HOUR
		        )
		VALUES 
		        ( 
		          SEQ_SCHNO.NEXTVAL
		          ,	?
		          , ?
		          , ?
		          , ?
		          ,(SELECT ROUND((TO_DATE(?, 'HH24:MI') - TO_DATE(?, 'HH24:MI')) * 24, 2)
           			 FROM dual)
  
		        
		            )
  
	
	</entry>
	
	<!-- 튜터 클래스 조회 -->
	<entry key="searchClass">
	
		SELECT
			CL_NO
			,CT_NAME
			,CT_DNAME
			,CL_NAME
			,TO_CHAR(c.enroll_date, 'YYYY-MM-DD') "enroll_date"
			,TO_CHAR(c.update_date, 'YYYY-MM-DD') "update_date"
			,decode(CL_STATUS,'0','검수요청','1','신청반려','2','판매중','3','판매중단') "cl_status"
			,NVL(CL_REFUSE,'') "cl_refuse"
		
			FROM CLASS C
			JOIN CATEGORY G ON (C.CT_NO  = G.CT_NO)
		    JOIN DCATEGORY D ON (C.CT_DNO = D.CT_DNO )
			JOIN TUTOR T USING (MEM_NO)
			WHERE MEM_NO = ?	
			
	
	</entry>
	
	
	<!-- 튜터 메인 페이지  -->
	
	<entry key="selectTutorNotice">
	
	SELECT
		   NT_NO,
		   SUBSTR(NT_TITLE, 1, 29) || '..' "NT_TITLE",
		   enroll_date
	  FROM NOTICE
	 WHERE NT_STA='Y'
	   AND GRADE='2'
	 ORDER 
	    BY ENROLL_DATE DESC
		
	
	</entry>
	
	
	
	<entry key= "selectTutorStatistics">

	SELECT MEM_NO,	
		    NVL(SUM(SUM_REG_MONTH),0)  "sumMonth",
		    NVL(SUM(SUM_TOTAL),0) "sumTotal",
		    NVL(COUNT(SUM_TOTAL),0) "sumReg",
		    NVL(SUM(CANCEL_COUNT),0) "cancelCount",
            NVL(AVG(STAR_AVG),0)"avgStar",
		    NVL(SUM(STAR_COUNT),0) "rCount"
	FROM (

			SELECT
					 C.MEM_NO,
					(SELECT SUM(REG_PRICE)
					FROM REGISTER G
					WHERE REG_DATE BETWEEN TRUNC(SYSDATE + 1) - TO_CHAR(SYSDATE, 'DD') AND TRUNC(LAST_DAY(SYSDATE)) + 0.99999421
					AND C.CL_NO = G.CL_NO
					AND REG_STA ='2' )"SUM_REG_MONTH"
					,(SELECT SUM(REG_PRICE)
					FROM REGISTER G
					WHERE C.CL_NO = G.CL_NO
					AND REG_STA ='2' ) "SUM_TOTAL"
					,(SELECT COUNT(REG_STA)
					FROM REGISTER G
					WHERE REG_STA = '3'
					AND G.CL_NO =C.CL_NO) "CANCEL_COUNT"
				   ,(SELECT AVG(RE_STAR)
				     FROM REVIEW R
					 WHERE R.CL_NO = C.CL_NO) "STAR_AVG"
				   , (SELECT COUNT(RE_STAR)
					  FROM REVIEW R
					  WHERE R.CL_NO = C.CL_NO) "STAR_COUNT"
					
			FROM CLASS C
			JOIN TUTOR T ON (C.MEM_NO=T.MEM_NO)
			WHERE C.MEM_NO = ?
	)
	GROUP BY MEM_NO    
	
	</entry>
	
	<entry key="selectIngClassCount">
	
	SELECT COUNT(CL_NO) "count"
	 FROM CLASS
	 WHERE MEM_NO = ?
	 AND CL_STATUS = 2
	

	</entry>
	
	
	<entry key= "selectQnaPercent">
	SELECT 
       DISTINCT (TOTALA/NVL(TOTALQ,0)*100) "qnaPer"
			FROM(
			        SELECT A_MEM_NO,
			            (SELECT COUNT(Q_NO)
			             FROM QNA
			             WHERE A_MEM_NO = ?
			             )"TOTALQ",
			            (SELECT COUNT(A_TITLE)
			             FROM QNA
			             WHERE A_MEM_NO = ?
			            ) "TOTALA"
			     FROM QNA 
			     )
	WHERE TOTALQ !=0
	</entry>
	
	<entry key="selectTutorRegister">
		SELECT
		       REG_NO
		     , MEM_NAME
		     , CL_NAME
		     , TEACH_DATE
		     , REG_DATE,'YYYY-MM-DD'
		     , START_TIME || '-' || END_TIME "SCH_TIME"
		     , TO_CHAR(REG_PRICE, '999,999,999') || '원' "REG_PRICE"
		     , REG_COUNT || '명' "REG_COUNT"
		     , REG_STA
		     , REG_CAL
		  FROM REGISTER
		  JOIN MEMBER USING(MEM_NO)
		  JOIN CLASS C USING(CL_NO)
		  JOIN SCHEDULE USING(SCH_NO)
		 WHERE C.MEM_NO = ?
           AND REG_STA = 1
		 ORDER 
		    BY REG_NO DESC
	</entry>
	
	<!-- 튜터수강전리스트 조회 -->
	<entry key="selectBFClassList">
	  SELECT  
	  		  REG_NO
			, MEM_NAME
			, MEM_PHONE
			, MEM_EMAIL
			, CL_NAME
			, TEACH_DATE
			, START_TIME
			, REG_PRICE
			, REG_COUNT
			, REG_STA
			, CL_PRICE
		 FROM REGISTER R
		 JOIN MEMBER USING (MEM_NO)
		 JOIN CLASS C USING (CL_NO)
		 JOIN SCHEDULE S USING (SCH_NO)
	    WHERE C.MEM_NO=?
		  AND REG_STA= 1 
			
	</entry>
	
		<!-- 튜터수강완료리스트 조회 -->
	<entry key="selectATClassList">
	  SELECT  
	  		  REG_NO
			, MEM_NAME
			, MEM_PHONE
			, MEM_EMAIL
			, CL_NAME
			, TEACH_DATE
			, START_TIME
			, REG_PRICE
			, REG_COUNT
			, decode(REG_STA,'2','수강완료','3','취소') "REG_STA"
			, CL_PRICE
		 FROM REGISTER R
		 JOIN MEMBER USING (MEM_NO)
		 JOIN CLASS C USING (CL_NO)
		 JOIN SCHEDULE S USING (SCH_NO)
	    WHERE C.MEM_NO=?
		  AND REG_STA IN (2,3)
			
	</entry>
	
	<!--예약관리 상세페이지 조회 -->
	<entry key="selectReservationClass">
	   SELECT  
	  		  REG_NO
	  		, REG_DATE
			, MEM_NAME
			, MEM_PHONE
			, NVL(MEM_EMAIL,'-') "MEM_EMAIL" 
			, CL_NAME
			, TEACH_DATE
			, START_TIME
            , END_TIME
			, TO_CHAR(REG_PRICE, '999,999,999') || '원' "REG_PRICE"
			, REG_COUNT
			, decode(REG_STA,'2','수강완료','3','취소') "REG_STA"
			, RE_ENROLL
			, CL_PRICE
			, NVL(MEMO,'특이사항을 메모해주세요') "MEMO"
            
		 FROM REGISTER R
		 JOIN MEMBER USING (MEM_NO)
		 JOIN CLASS C USING (CL_NO)
		 JOIN SCHEDULE S USING (SCH_NO)
	    WHERE REG_NO = ?
	
	</entry>
	
	<entry key="updateReservation">
		UPDATE REGISTER
           SET REG_STA = ?
             , MEMO = ?
         WHERE REG_NO=?
	</entry>
	
	<entry key="selectTutorInfo2">
		SELECT *
		  FROM TUTOR
		  WHERE MEM_NO = ?
	</entry>
	
	<entry key ="">
	
	
	</entry>

</properties>